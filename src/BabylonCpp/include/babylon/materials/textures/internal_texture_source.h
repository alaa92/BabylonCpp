#ifndef BABYLON_MATERIALS_TEXTURES_INTERNAL_TEXTURE_SOURCE_H
#define BABYLON_MATERIALS_TEXTURES_INTERNAL_TEXTURE_SOURCE_H

#include <babylon/babylon_api.h>

namespace BABYLON {

/**
 * @brief Defines the source of the internal texture.
 */
enum class BABYLON_SHARED_EXPORT InternalTextureSource {
  /**
   * The source of the texture data is unknown
   */
  Unknown,
  /**
   * Texture data comes from an URL
   */
  Url,
  /**
   * Texture data is only used for temporary storage
   */
  Temp,
  /**
   * Texture data comes from raw data (ArrayBuffer)
   */
  Raw,
  /**
   * Texture content is dynamic (video or dynamic texture)
   */
  Dynamic,
  /**
   * Texture content is generated by rendering to it
   */
  RenderTarget,
  /**
   * Texture content is part of a multi render target process
   */
  MultiRenderTarget,
  /**
   * Texture data comes from a cube data file
   */
  Cube,
  /**
   * Texture data comes from a raw cube data
   */
  CubeRaw,
  /**
   * Texture data come from a prefiltered cube data file
   */
  CubePrefiltered,
  /**
   * Texture content is raw 3D data
   */
  Raw3D,
  /**
   * Texture content is raw 2D array data
   */
  Raw2DArray,
  /**
   * Texture content is a depth texture
   */
  Depth,
  /**
   * Texture data comes from a raw cube data encoded with RGBD
   */
  CubeRawRGBD
}; // end of enum class InternalTextureSource

} // end of namespace BABYLON

#endif // end of BABYLON_MATERIALS_TEXTURES_INTERNAL_TEXTURE_SOURCE_H
